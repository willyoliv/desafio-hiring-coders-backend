"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.vbaseFor = void 0;
const api_1 = require("@vtex/api");
class VBaseEntityRepository extends api_1.VBase {
}
exports.vbaseFor = (bucket) => {
    return class extends VBaseEntityRepository {
        save(key, entity, ifMatch) {
            return this.saveJSON(bucket, key, entity, undefined, ifMatch);
        }
        get(key, nullIfNotfound = false) {
            return this.getJSON(bucket, key, nullIfNotfound);
        }
        getRaw(key, nullIfNotfound = false) {
            return this.getRawJSON(bucket, key, nullIfNotfound);
        }
        getWithMetadata(key, nullIfNotfound = false) {
            return this.getRaw(key, nullIfNotfound).then((res) => {
                const { etag } = res.headers;
                const isNotFound = res.status === 404;
                const metadata = { hash: etag };
                if (isNotFound && nullIfNotfound) {
                    return { entity: null, metadata };
                }
                return { entity: res.data, metadata };
            });
        }
        trySaveIfHashMatches(key, hash, entity) {
            return this.saveJSON(bucket, key, entity, undefined, hash);
        }
    };
};
