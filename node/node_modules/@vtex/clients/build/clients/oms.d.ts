import { InstanceOptions, IOContext, JanusClient, RequestTracingConfig } from '@vtex/api';
import { AuthMethod } from '../typings/tokens';
import { CancelResponse, ListOrdersResponse, NotificationInput, NotificationResponse, OrderDetailResponse } from '../typings/oms';
import { OrderFormConfiguration } from '../typings/orderForm';
export declare class OMS extends JanusClient {
    constructor(ctx: IOContext, options?: InstanceOptions);
    listOrders(authMethod?: AuthMethod, tracingConfig?: RequestTracingConfig): Promise<ListOrdersResponse>;
    userLastOrder(authMethod?: AuthMethod, tracingConfig?: RequestTracingConfig): Promise<OrderFormConfiguration>;
    order(id: string, authMethod?: AuthMethod, tracingConfig?: RequestTracingConfig): Promise<OrderDetailResponse>;
    orderNotification(id: string, body: NotificationInput, authMethod?: AuthMethod, tracingConfig?: RequestTracingConfig): Promise<NotificationResponse>;
    cancelOrder(id: string, authMethod?: AuthMethod, tracingConfig?: RequestTracingConfig): Promise<CancelResponse>;
}
